"""init_table

Revision ID: a81b369eff7d
Revises: 1f9068250d7b
Create Date: 2022-11-11 16:54:34.287607

"""
import datetime

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
from crawlerstack_anticaptcha.config import settings

revision = 'a81b369eff7d'
down_revision = '1f9068250d7b'
branch_labels = None
depends_on = None

current_date = datetime.datetime(2022, 11, 11, 16, 54, 34)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    category_table = op.create_table('captcha_category',
                                     sa.Column('id', sa.Integer(), nullable=False),
                                     sa.Column('name', sa.String(length=255), nullable=True),
                                     sa.Column('update_time', sa.DateTime(), nullable=True, comment='Update time'),
                                     sa.Column('create_time', sa.DateTime(), nullable=True, comment='Create time'),
                                     sa.PrimaryKeyConstraint('id'),
                                     sa.UniqueConstraint('name')
                                     )
    op.create_table('captcha_record',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('category_id', sa.Integer(), nullable=True, comment='Captcha type id.'),
                    sa.Column('content', sa.String(length=255), nullable=True, comment='Extra content.'),
                    sa.Column('result', sa.String(length=255), nullable=True, comment='Identification result.'),
                    sa.Column('success', sa.Boolean(), nullable=True, comment='Whether the parsing was successful.'),
                    sa.Column('deleted', sa.Boolean(), nullable=True, comment='Delete status.'),
                    sa.Column('update_time', sa.DateTime(), nullable=True, comment='Update time.'),
                    sa.Column('create_time', sa.DateTime(), nullable=True, comment='Create time.'),
                    sa.PrimaryKeyConstraint('id')
                    )
    storage_table = op.create_table('storage',
                                    sa.Column('id', sa.Integer(), nullable=False),
                                    sa.Column('uri', sa.String(length=255), nullable=True,
                                              comment='Save the location.'),
                                    sa.Column('name', sa.String(length=255), nullable=True,
                                              comment='Name of storage mode.'),
                                    sa.Column('default', sa.Boolean(), nullable=True, comment='Default opening mode.'),
                                    sa.Column('update_time', sa.DateTime(), nullable=True, comment='Update time.'),
                                    sa.Column('create_time', sa.DateTime(), nullable=True, comment='Create time.'),
                                    sa.PrimaryKeyConstraint('id')
                                    )
    op.create_table('captcha_file',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('record_id', sa.Integer(), nullable=True, comment='Id used for event logging.'),
                    sa.Column('filename', sa.String(length=255), nullable=True, comment='Id generated from filename.'),
                    sa.Column('file_type', sa.String(length=255), nullable=True, comment='Image file type.'),
                    sa.Column('storage_id', sa.Integer(), nullable=True, comment='Storage mode id.'),
                    sa.Column('file_mark', sa.String(length=255), nullable=True,
                              comment='Image mark.(foreground or background image)'),
                    sa.Column('update_time', sa.DateTime(), nullable=True, comment='Update time.'),
                    sa.Column('create_time', sa.DateTime(), nullable=True, comment='Create time.'),
                    sa.ForeignKeyConstraint(['storage_id'], ['storage.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.bulk_insert(
        category_table,
        [
            {
                'name': 'NumericalCaptcha',
                'id': 1001,
                'update_time': '2022-11-11 16:54:34',
                'create_time': '2022-11-11 16:54:34'
            },
            {
                'name': 'SliderCaptcha',
                'id': 1002,
                'update_time': '2022-11-17 10:54:34',
                'create_time': '2022-11-17 10:54:34'
            }
        ]
    )
    op.bulk_insert(
        storage_table,
        [
            {
                'name': 'local',
                'uri': f'localfile://{settings.CAPTCHA_IMAGE_PATH}',
                'default': True,
                'update_time': '2022-11-11 16:54:34',
                'create_time': '2022-11-11 16:54:34'
            }
        ]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('captcha_file')
    op.drop_table('storage')
    op.drop_table('captcha_record')
    op.drop_table('captcha_category')
    # ### end Alembic commands ###
